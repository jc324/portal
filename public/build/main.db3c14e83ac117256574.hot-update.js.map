{"version":3,"file":"main.db3c14e83ac117256574.hot-update.js","sources":["C:/Users/baeyun/Documents/bukharim96/HWW/halalwatchworld-portal/src/routes.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport Auth from \"./api/Auth\";\r\n\r\n// Layouts\r\nimport MainLayout from \"./layouts/MainLayout\";\r\nimport AdminDashboardLayout from \"./layouts/AdminDashboardLayout\";\r\nimport ReviewerDashboardLayout from \"./layouts/ReviewerDashboardLayout\";\r\nimport ClientDashboardLayout from \"./layouts/ClientDashboardLayout\";\r\n\r\n// Universal screens\r\nimport LoginView from \"./views/common/auth/LoginView\";\r\nimport ResetPasswordView from \"./views/common/auth/ResetPasswordView\";\r\nimport RegisterView from \"./views/common/auth/RegisterView\";\r\nimport ChangePasswordView from \"./views/common/auth/profile/ChangePasswordView\";\r\nimport NotFoundView from \"./views/common/errors/NotFoundView\";\r\n\r\n// Admin screens\r\nimport AdminAccountView from \"./views/admin/account/AccountView\";\r\nimport AdminReviewsView from \"./views/admin/reviews\";\r\nimport AdminReviewerListView from \"./views/admin/reviewers\";\r\nimport AdminFacilityCategoriesView from \"./views/admin/facility-categories\";\r\nimport AdminProductCategoriesView from \"./views/admin/product-categories\";\r\n// import AdminDashboardView from \"./views/admin/reports/DashboardView\";\r\n\r\n// Reviewer screens\r\nimport ReviewerClientRequestsView from \"./views/reviewer/requests\";\r\nimport ReviewerClientSingleRequestsView from \"./views/reviewer/requests/request\";\r\nimport ReviewerClientsView from \"./views/reviewer/clients\";\r\nimport ReviewerRegisterClientView from \"./views/reviewer/register-client\";\r\nimport ReviewerReviewsQueueView from \"./views/reviewer/reviews-queue\";\r\nimport ReviewerApprovedReviewsView from \"./views/reviewer/approved-reviews\";\r\nimport ReviewerDraftedReviewsView from \"./views/reviewer/drafted-reviews\";\r\nimport ReviewerNewReviewView from \"./views/reviewer/new-review\";\r\nimport ReviewerClientView from \"./views/reviewer/clients/client\";\r\nimport ReviewerProfile from \"./views/reviewer/profile/index\";\r\n\r\n// Client screens\r\nimport ClientNewRequest from \"./views/client/new-request\";\r\nimport ClientRequestsView from \"./views/client/requests\";\r\nimport ClientRequestView from \"./views/client/requests/request\";\r\nimport ClientReportsView from \"./views/client/reports/audit\";\r\nimport ClientCertificatesView from \"./views/client/certificates\";\r\nimport ClientProfile from \"./views/client/profile/index\";\r\nimport ClientProfileEdit from \"./views/client/profile/edit/index\";\r\n\r\n// Misc\r\nimport ProductListView from \"./views/misc/product/ProductListView\";\r\n// import SettingsView from \"./views/misc/settings/SettingsView\";\r\n\r\n// const auth = new Auth();\r\n\r\n// const user = getDummyUserAuthContext(UserRole.REVIEWER);\r\n\r\n// COMMON/PUBLIC routes\r\n// PartialRouteObject\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: \"login\", element: <LoginView /> },\r\n      { path: \"reset-password\", element: <ResetPasswordView /> },\r\n      { path: \"register\", element: <RegisterView /> },\r\n      { path: \"404\", element: <NotFoundView /> },\r\n      { path: \"/\", element: <LoginView /> }, // <Navigate to=\"/login\" />\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n  // ADMIN routes\r\n  {\r\n    path: \"/admin\",\r\n    element: <PrivateRoute component={AdminDashboardLayout} />,\r\n    children: [\r\n      { path: \"account\", element: <AdminAccountView /> },\r\n      { path: \"reviews\", element: <AdminReviewsView /> },\r\n      { path: \"reviewers\", element: <AdminReviewerListView /> },\r\n      { path: \"facility-categories\", element: <AdminFacilityCategoriesView /> },\r\n      { path: \"product-categories\", element: <AdminProductCategoriesView /> },\r\n      // { path: \"dashboard\", element: <AdminDashboardView /> },\r\n      // { path: \"products\", element: <ProductListView /> },\r\n      // { path: \"settings\", element: <SettingsView /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n  // REVIEWER routes\r\n  {\r\n    path: \"/reviewer\",\r\n    element: <PrivateRoute component={ReviewerDashboardLayout} />,\r\n    children: [\r\n      { path: \"clients/requests\", element: <ReviewerClientRequestsView /> },\r\n      {\r\n        path: \"clients/request/:id\",\r\n        element: <ReviewerClientSingleRequestsView />,\r\n      },\r\n      { path: \"clients\", element: <ReviewerClientsView /> },\r\n      { path: \"register-client\", element: <ReviewerRegisterClientView /> },\r\n      { path: \"reviews-queue\", element: <ReviewerReviewsQueueView /> },\r\n      { path: \"approved-reviews\", element: <ReviewerApprovedReviewsView /> },\r\n      { path: \"drafted-reviews\", element: <ReviewerDraftedReviewsView /> },\r\n      { path: \"new-review\", element: <ReviewerNewReviewView /> },\r\n      { path: \"client/:id\", element: <ReviewerClientView /> },\r\n      { path: \"profile\", element: <ReviewerProfile /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n  // CLIENT routes\r\n  {\r\n    path: \"/client\",\r\n    element: <PrivateRoute component={ClientDashboardLayout} />,\r\n    children: [\r\n      { path: \"new-request\", element: <ClientRequestViewNew /> },\r\n      { path: \"requests\", element: <ClientRequestsView /> },\r\n      { path: \"request/:id\", element: <ClientRequestView /> },\r\n      { path: \"audit-reports\", element: <ClientReportsView /> },\r\n      { path: \"review-reports\", element: <ClientReportsView /> },\r\n      { path: \"certificates\", element: <ClientCertificatesView /> },\r\n      { path: \"profile\", element: <ClientProfile /> },\r\n      { path: \"profile/edit\", element: <ClientProfileEdit /> },\r\n      { path: \"change-password\", element: <ChangePasswordView /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n];\r\n\r\n// necessary to wrap, to prevent link cache from same comp\r\n// eg: loading this from /client/request/:id\r\nfunction ClientRequestViewNew() {\r\n  return <ClientRequestView />;\r\n}\r\n\r\n// @TODO type\r\nfunction PrivateRoute({ component, ...rest }: any) {\r\n  const Component = component;\r\n  const auth = new Auth();\r\n\r\n  return auth.isAuthenticated() ? (\r\n    <Component {...rest} />\r\n  ) : (\r\n    <Navigate to=\"/login\" state={{ from: rest.location }} />\r\n  );\r\n}\r\n\r\nexport default routes;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAgjBA;AAqbA;AAmBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAVA;AAWA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}