{"version":3,"file":"main.87df234395250a3eb747.hot-update.js","sources":["C:/Users/baeyun/Documents/bukharim96/HWW/halalwatchworld-portal/src/views/client/requests/request/Step_08.tsx","C:/Users/baeyun/Documents/bukharim96/HWW/halalwatchworld-portal/src/views/client/requests/request/UploadSpecSheetBtn.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { ShoppingBag as ShoppingBagIcon } from \"react-feather\";\r\n\r\nimport ProductDialog, { ProductDialogMode } from \"./ProductDialog\";\r\nimport IngredientDialog, { IngredientDialogMode } from \"./IngredientDialog\";\r\nimport UploadSpecSheetBtn from \"./UploadSpecSheetBtn\";\r\n\r\nimport {\r\n  Product,\r\n  Ingredient,\r\n  ReviewRequest,\r\n} from \"../../../reviewer/common/types\";\r\nimport AddProductDialog from \"./AddProductDialog\";\r\nimport IngredientsView from \"./IngredientsView\";\r\n\r\ninterface FinishedProductsStepProps {\r\n  reviewRequest: ReviewRequest;\r\n}\r\n\r\n// @TODO handle avatar\r\nconst FinishedProductsStep = ({ reviewRequest }: FinishedProductsStepProps) => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const getProducts = () => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`/api/client/review-request/${reviewRequest.id}/products`)\r\n      .then(async (response) => {\r\n        setLoading(false);\r\n        if (response.status == 200 || response.status == 201) {\r\n          console.log(response.data);\r\n          setProducts(response.data);\r\n        } else {\r\n          console.log(response);\r\n          enqueueSnackbar(\"Failed to retrieve products.\", {\r\n            variant: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Failed to retrieve products.\", {\r\n          variant: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleProductAdd = (product: Product) => {\r\n    setProducts([product, ...products]);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.stepBox}>\r\n      {loading && <LinearProgress />}\r\n      <Typography\r\n        variant=\"h3\"\r\n        style={{ marginBottom: 30, textAlign: \"center\" }}\r\n      >\r\n        Finished Products\r\n      </Typography>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginBottom: 30,\r\n        }}\r\n      >\r\n        <Typography>\r\n          Click on the button at the right to add your products and ingredients\r\n          to this request:\r\n        </Typography>\r\n        <AddProductDialog\r\n          onProductAdd={handleProductAdd}\r\n          reviewRequestId={reviewRequest.id as number}\r\n          facilityId={reviewRequest.facility_id as number}\r\n        />\r\n      </Box>\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        // subheader={\r\n        //   <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n        //     Products and Ingredients\r\n        //   </ListSubheader>\r\n        // }\r\n        className={classes.root}\r\n      >\r\n        {products.map((product: Product) => (\r\n          <ProductItem product={product} />\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FinishedProductsStep;\r\n\r\nfunction getSome<T>(array: Array<T>, some: number): Array<T> {\r\n  return array.sort(() => Math.random() - Math.random()).slice(0, some);\r\n}\r\n\r\nexport interface ProductItemProps {\r\n  product: Product;\r\n}\r\n\r\nexport function ProductItem({ product }: ProductItemProps) {\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const [specSheet, setSpecSheet] = React.useState<boolean>(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleIngredientAdd = (ingredient: Ingredient) => {\r\n    // cause refresh\r\n    setOpen(!open);\r\n    // setOpen(true);\r\n  };\r\n\r\n  // @TODO make real\r\n  const uploadSpecSheet = () => {\r\n    sleep(2000).then(() => {\r\n      setSpecSheet(!specSheet);\r\n      if (!specSheet)\r\n        enqueueSnackbar(\"Product Spec Sheet uploaded successfully\", {\r\n          variant: \"success\",\r\n        });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <ShoppingBagIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary={product.name} />\r\n        {/* <Button\r\n          variant={(specSheet && \"contained\") || \"text\"}\r\n          color={(specSheet && \"primary\") || \"default\"}\r\n          startIcon={<CloudUploadIcon />}\r\n          style={{ marginRight: 15 }}\r\n          onClick={uploadSpecSheet}\r\n        >\r\n          Product Spec Sheet\r\n        </Button> */}\r\n        <Tooltip title=\"A product specification sheet is a technical document that outlines the features of a product in detail. It explains and describes the product, what it is, what it does, what its components are and any special features it has. It also provides any other important additional information such as hazard and allergy warnings.\">\r\n          <UploadSpecSheetBtn productId={product.id as number} />\r\n        </Tooltip>\r\n        <span style={{ width: 15 }} />\r\n        <IngredientDialog\r\n          reviewRequestId={product.review_request_id as number}\r\n          productId={product.id as number}\r\n          onIngredientUpdate={handleIngredientAdd}\r\n          mode={IngredientDialogMode.ADD}\r\n        />\r\n        <IconButton onClick={handleClick}>\r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </IconButton>\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <IngredientsView productId={product.id as number} />\r\n          {/* {ingredients.map((ingredient: Ingredient) => (\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <SubdirectoryArrowRightIcon />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={`${ingredient.name} (${\"Demo Manufacturer\"})`}\r\n                // secondary=\"Demo Manufacturer\"\r\n              />\r\n              <IconButton size=\"small\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </ListItem>\r\n          ))} */}\r\n        </List>\r\n      </Collapse>\r\n      {/* <ProductDialog\r\n        mode={ProductDialogMode.EDIT}\r\n        open={open}\r\n        edit={product}\r\n        onClose={handleProductDialogClose}\r\n        onProductUpdate={_onProductUpdate}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stepBox: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    // alignItems: \"center\",\r\n  },\r\n  stepBtn: {\r\n    width: 500,\r\n  },\r\n\r\n  root: {},\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction sleep(time: number) {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Box, List, CircularProgress } from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport LoadingButton from \"../../../reviewer/common/LoadingButton\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nimport { MAX_ALLOWED_SIZE } from \"../../../../config\";\r\nimport {\r\n  ProductDocument,\r\n  ProductDocumentType,\r\n  Document,\r\n} from \"../../../reviewer/common/types\";\r\n\r\nexport interface UploadSpecSheetBtnProps {\r\n  productId: number;\r\n}\r\n\r\nexport default function UploadSpecSheetBtn({\r\n  productId,\r\n}: UploadSpecSheetBtnProps) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [doc, setDoc] = useState<ProductDocument | null>(null);\r\n  const inputRef = useRef(null);\r\n  const updateInputRef = useRef(null);\r\n  const documentCopy = (document && Object.assign({}, document)) || null;\r\n  // const [file, setFile] = useState<Document | null>(documentCopy);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(`/api/client/product/${productId}/documents`)\r\n      .then(async (response) => {\r\n        setLoading(false);\r\n        if (response.status == 200 || response.status == 201) {\r\n          console.log(response.data);\r\n          setDoc(response.data[0]);\r\n        } else {\r\n          console.log(response);\r\n          enqueueSnackbar(\"Failed to retrieve product spec sheet.\", {\r\n            variant: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Failed to retrieve product spec sheet.\", {\r\n          variant: \"error\",\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleDocumentUploadButton = () => {\r\n    // @ts-ignore\r\n    if (inputRef) inputRef.current.click();\r\n  };\r\n\r\n  const handleDocumentUpdateButton = () => {\r\n    // @ts-ignore\r\n    if (inputRef) updateInputRef.current.click();\r\n  };\r\n\r\n  // const setDocumentHandler = (document: Document) => {\r\n  //   setDoc(document as ProductDocument);\r\n  //   console.log(doc);\r\n  // };\r\n\r\n  // const updateDocHandler = (doc: Document, documentId: number) => {\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"document\", doc);\r\n\r\n  //   return axios.post(`/api/client/product/document/${documentId}`, formData, {\r\n  //     headers: {\r\n  //       \"Content-Type\": \"multipart/form-data\",\r\n  //     },\r\n  //   });\r\n  // };\r\n\r\n  // const deleteDocHandler = (documentId: number) => {\r\n  //   setDoc(doc.filter((d) => d.id !== documentId));\r\n\r\n  //   return axios.delete(\"/api/client/product/document/\" + documentId);\r\n  // };\r\n\r\n  const handleDocumentUpload = (e: any) => {\r\n    const _doc = e.target.files[0] as Document;\r\n\r\n    if (!_doc) return;\r\n\r\n    if (_doc.size > MAX_ALLOWED_SIZE) {\r\n      alert(\"File exceeds the maximum allowed size of 10 MB.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"document\", _doc);\r\n    formData.append(\"type\", ProductDocumentType.SPEC_SHEETS.toString());\r\n\r\n    axios\r\n      .post(`/api/client/product/${productId}/document`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then(async (response) => {\r\n        setLoading(false);\r\n        if (response.status == 200 || response.status == 201) {\r\n          // console.log(response.data);\r\n          // setDoc(response.data);\r\n          // setDocument(response.data);\r\n          setDoc(response.data);\r\n          enqueueSnackbar(`Uploaded product spec successfully.`, {\r\n            variant: \"success\",\r\n          });\r\n        } else {\r\n          console.log(response);\r\n          enqueueSnackbar(`Product spec sheet upload failed.`, {\r\n            variant: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        setLoading(false);\r\n        enqueueSnackbar(`Product spec sheet upload failed.`, {\r\n          variant: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  if (loading) return <CircularProgress />;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        name=\"file\"\r\n        id={Math.random().toString()}\r\n        accept=\"application/msword, application/pdf\"\r\n        data-title=\"Upload\"\r\n        // multiple\r\n        // data-multiple-caption=\"{count} files selected\"\r\n        onChange={handleDocumentUpload}\r\n        style={{ display: \"none\" }}\r\n      />\r\n      {/* <input\r\n        ref={updateInputRef}\r\n        type=\"file\"\r\n        name=\"updatedFile\"\r\n        id={Math.random().toString()}\r\n        accept=\"application/msword, application/pdf\"\r\n        data-title=\"Upload\"\r\n        onChange={handleUpdateDocument}\r\n        style={{ display: \"none\" }}\r\n      /> */}\r\n      <LoadingButton\r\n        loading={loading}\r\n        done={doc != null}\r\n        onClick={handleDocumentUploadButton}\r\n        startIcon={<CloudUploadIcon />}\r\n        variant=\"contained\"\r\n      >\r\n        Product Spec Sheet\r\n      </LoadingButton>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAPA;AAQA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAnFA;AACA;;;AADA;AAorFA;AAGA;;;AAHA;AAsFA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAIA;AACA;AACA;AADA;AAGA;AACA;AADA;AAIA;AACA;AADA;AAnBA;AACA;AAuBA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtuBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AA7JA;AAGA;;;AAHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}