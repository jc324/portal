{"version":3,"file":"main.77cc46c5d698acdc9ed8.hot-update.js","sources":["C:/Users/baeyun/Documents/bukharim96/HWW/halalwatchworld-portal/src/views/common/auth/LoginView.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport Auth from \"../../../api/Auth\";\r\nimport Page from \"../../../components/Page\";\r\n\r\nconst auth = new Auth();\r\n\r\nfunction findGetParameter(parameterName: string): string | null {\r\n  let result: string | null = null;\r\n  let tmp = [];\r\n\r\n  window.location.search\r\n    .substr(1)\r\n    .split(\"&\")\r\n    .forEach(function (item) {\r\n      tmp = item.split(\"=\");\r\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\r\n    });\r\n\r\n  return result;\r\n}\r\n\r\nconst LoginView = (props: any) => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const referrer = findGetParameter(\"referrer\");\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    auth\r\n      .authenticate()\r\n      .then((user) => {\r\n        setLoading(false);\r\n        if (referrer) navigate(referrer.replace(window.location.origin, \"\"));\r\n        else\r\n          navigate(redirectLinkFromRole(user.role), {\r\n            replace: true,\r\n          });\r\n      })\r\n      .catch(() => setLoading(false));\r\n  }, []);\r\n\r\n  const onSubmitHandler = (\r\n    values: {\r\n      email: string;\r\n      password: string;\r\n      remember: boolean;\r\n    },\r\n    { setSubmitting }\r\n  ) => {\r\n    setLoading(true);\r\n\r\n    auth\r\n      .login(values)\r\n      .then((user) => {\r\n        setSubmitting(false);\r\n        setLoading(false);\r\n        navigate(redirectLinkFromRole(user.role), {\r\n          replace: true,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.response);\r\n        setLoading(false);\r\n        setSubmitting(false);\r\n        // @TODO set formik errors\r\n        if (!e.response.data.errors) return;\r\n        let errorMessage = Object.values(e.response.data.errors)\r\n          .map((v: any) => v[0])\r\n          .join(\" \");\r\n        setErrorMessage(errorMessage);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Login\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          {loading && <LinearProgress />}\r\n          <Paper style={{ padding: 20, paddingTop: 30 }}>\r\n            <Formik\r\n              initialValues={{\r\n                email: \"\",\r\n                password: \"\",\r\n                remember: false,\r\n              }}\r\n              validationSchema={Yup.object().shape({\r\n                email: Yup.string()\r\n                  .email(\"Must be a valid email\")\r\n                  .max(255)\r\n                  .required(\"Email is required\"),\r\n                password: Yup.string()\r\n                  .max(255)\r\n                  .required(\"Password is required\"),\r\n                remember: Yup.boolean().optional(),\r\n              })}\r\n              onSubmit={onSubmitHandler}\r\n            >\r\n              {({\r\n                errors,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                touched,\r\n                values,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Box mb={3} style={{ paddingBottom: 10 }}>\r\n                    <Typography\r\n                      color=\"textPrimary\"\r\n                      variant=\"h2\"\r\n                      align=\"center\"\r\n                      style={{ marginBottom: 7 }}\r\n                    >\r\n                      Log in\r\n                    </Typography>\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      gutterBottom\r\n                      variant=\"body2\"\r\n                      align=\"center\"\r\n                    >\r\n                      Log in to Halal Watch World's secure portal\r\n                    </Typography>\r\n                    {errorMessage && (\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant=\"body2\"\r\n                        align=\"center\"\r\n                        style={{ color: \"red\" }}\r\n                      >\r\n                        {errorMessage}\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                  {/* <Grid container spacing={3}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      startIcon={<FacebookIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Facebook\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <Button\r\n                      fullWidth\r\n                      startIcon={<GoogleIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Google\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box mt={3} mb={1}>\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    or login with email address\r\n                  </Typography>\r\n                </Box> */}\r\n                  <TextField\r\n                    error={Boolean(touched.email && errors.email)}\r\n                    fullWidth\r\n                    helperText={touched.email && errors.email}\r\n                    label=\"Email Address\"\r\n                    margin=\"normal\"\r\n                    name=\"email\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    error={Boolean(touched.password && errors.password)}\r\n                    fullWidth\r\n                    helperText={touched.password && errors.password}\r\n                    label=\"Password\"\r\n                    margin=\"normal\"\r\n                    name=\"password\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={values.remember}\r\n                        onChange={handleChange}\r\n                        name=\"remember\"\r\n                      />\r\n                    }\r\n                    label=\"Remember me\"\r\n                  />\r\n                  <Box my={2}>\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      disabled={isSubmitting}\r\n                      fullWidth\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Log in\r\n                    </Button>\r\n                  </Box>\r\n                  <Typography color=\"textSecondary\" variant=\"body1\">\r\n                    Forgot password?{\" \"}\r\n                    <Link\r\n                      component={RouterLink}\r\n                      to=\"/forgot-password\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Reset\r\n                    </Link>\r\n                  </Typography>\r\n                  {/* <Typography color=\"textSecondary\" variant=\"body1\">\r\n                    Don&apos;t have an account?{\" \"}\r\n                    <Link component={RouterLink} to=\"/register\" variant=\"h6\">\r\n                      Sign up\r\n                    </Link>\r\n                  </Typography> */}\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </Paper>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport function redirectLinkFromRole(userRole: string): string {\r\n  switch (userRole) {\r\n    case \"ADMIN\":\r\n      return \"/admin/review-requests\";\r\n    case \"REVIEWER\":\r\n      return \"/reviewer/clients/requests\";\r\n    case \"CLIENT\":\r\n      return \"/client/dashboard\";\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default LoginView;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAcA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAGA;AADA;AAGA;AAEA;AACA;AACA;AAMA;AAAA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAIA;AAGA;AARA;AAUA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AApOA;AAEA;;;AAFA;AAqOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}