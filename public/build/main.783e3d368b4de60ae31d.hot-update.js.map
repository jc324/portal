{"version":3,"file":"main.783e3d368b4de60ae31d.hot-update.js","sources":["C:/Users/baeyun/Documents/bukharim96/HWW/halalwatchworld-portal/src/views/reviewer/clients/client/ManufacturerSelector.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Manufacturer } from \"../../common/types\";\r\n\r\ninterface ManufacturerSelectorProps {\r\n  defaultValue?: string | null;\r\n  onSelect: (value: Manufacturer) => void;\r\n}\r\n\r\nexport default function ManufacturerSelector({\r\n  defaultValue,\r\n  onSelect,\r\n}: ManufacturerSelectorProps) {\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState<Manufacturer[]>([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  const handleChange = (event: any) => {\r\n    onSelect(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      axios\r\n        .post(`/api/manufacturers`)\r\n        .then(async (response) => {\r\n          if (response.status == 200 || response.status == 201) {\r\n            console.log(response.data);\r\n            if (active) setOptions(response.data as Manufacturer[]);\r\n          } else {\r\n            console.error(response);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.error(e);\r\n        });\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      freeSolo\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      onChange={(event: any, newValue: string | Manufacturer | null) => {\r\n        onSelect(newValue as Manufacturer);\r\n      }}\r\n      defaultValue={{ name: defaultValue as string }}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={options}\r\n      loading={loading}\r\n      renderInput={(params) => {\r\n        return (\r\n          <TextField\r\n            {...params}\r\n            label=\"Raw Material Manufacturer Name\"\r\n            name=\"manufacturer_name\"\r\n            variant=\"outlined\"\r\n            required\r\n            onChange={handleChange}\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <>\r\n                  {loading ? (\r\n                    <CircularProgress color=\"inherit\" size={20} />\r\n                  ) : null}\r\n                  {params.InputProps.endAdornment}\r\n                </>\r\n              ),\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AAFA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CA;AACA;AA1FA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}