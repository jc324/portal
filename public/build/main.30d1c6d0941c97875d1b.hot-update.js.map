{"version":3,"file":"main.30d1c6d0941c97875d1b.hot-update.js","sources":["C:/Users/baeyun/Documents/bukharim96/HWW/halalwatchworld-portal/src/views/reviewer/requests/review/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  useTheme,\r\n  createStyles,\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  LinearProgress,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ReviewRequest } from \"../../common/types\";\r\nimport Page from \"../../../../components/Page\";\r\nimport FacilityView from \"./FacilityView\";\r\nimport ProductsView from \"./ProductsView\";\r\nimport IngredientsView from \"./IngredientsView\";\r\nimport ManufacturersView from \"./ManufacturersView\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    // @ts-ignore\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function SingleReviewRequestView() {\r\n  const classes = useStyles1();\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <Page className={classes.root} title=\"Client\">\r\n      <Container maxWidth=\"lg\" style={{ marginLeft: 0 }}>\r\n        {/* <Toolbar /> */}\r\n        <Grid container spacing={3}>\r\n          {/* <Grid item lg={8} md={6} xs={12}> */}\r\n          <Grid item md={12}>\r\n            <SingleReviewRequest />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\nfunction SingleReviewRequest() {\r\n  const classes = useStyles3();\r\n  const params = useParams();\r\n  const requestId = Number.parseInt(params.id);\r\n  const { id } = useParams(); // reviewRequestId\r\n  const [reviewRequest, setReviewRequest] = useState<ReviewRequest | undefined>(\r\n    undefined\r\n  );\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`/api/client/review-request/${id}`)\r\n      .then(async (response) => {\r\n        setLoading(false);\r\n        // console.log(response.data);\r\n        setReviewRequest(response.data);\r\n      })\r\n      .catch((e) => {\r\n        // @TODO handle\r\n        console.error(e);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" noValidate>\r\n      <Card>\r\n        {loading && <LinearProgress />}\r\n        <CardHeader\r\n          title={\r\n            <strong children={`REVIEW: Document Submission ${requestId}`} />\r\n          }\r\n        />\r\n        <Divider />\r\n        <div className={classes.root}>\r\n          <AppBar\r\n            position=\"static\"\r\n            color=\"default\"\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"full width tabs example\"\r\n              centered\r\n            >\r\n              <Tab label=\"Facility\" {...a11yProps(0)} />\r\n              <Tab label=\"Products\" {...a11yProps(1)} />\r\n              <Tab label=\"Ingredients\" {...a11yProps(2)} />\r\n              <Tab label=\"Manufacturers\" {...a11yProps(3)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <Box\r\n            p={3}\r\n            style={{\r\n              height: \"calc(100vh - 284px)\",\r\n              overflowX: \"auto\",\r\n            }}\r\n          >\r\n            <TabPanel value={value} index={0}>\r\n              {reviewRequest && (\r\n                <FacilityView\r\n                  facilityId={reviewRequest.facility_id as number}\r\n                />\r\n              )}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              {reviewRequest && <ProductsView reviewRequest={reviewRequest} />}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              {reviewRequest && (\r\n                <IngredientsView reviewRequest={reviewRequest} />\r\n              )}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n              {reviewRequest && (\r\n                <ManufacturersView reviewRequest={reviewRequest} />\r\n              )}\r\n            </TabPanel>\r\n          </Box>\r\n          <Divider />\r\n          <Box display=\"flex\" p={2} justifyContent=\"flex-end\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              href={`/reviewer/clients/request/${\r\n                (reviewRequest && reviewRequest.id) || 0\r\n              }/generate-report`}\r\n            >\r\n              Generate Report\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      </Card>\r\n    </form>\r\n  );\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n      style={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {value === index && children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles3 = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: \"calc(100vh - 166px)\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n"],"mappings":"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","sourceRoot":""}